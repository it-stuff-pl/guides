services:
  db:
    image: mysql:9.4
    container_name: db
    restart: unless-stopped
    environment:
      - MYSQL_DATABASE=${MYSQL_DB}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - app-network
  wordpress:
    depends_on:
      - db
    image: wordpress:php8.4-fpm
    container_name: wordpress
    restart: unless-stopped
    environment:
      - WORDPRESS_DB_HOST=${MYSQL_HOST}
      - WORDPRESS_DB_USER=${MYSQL_USER}
      - WORDPRESS_DB_PASSWORD=${MYSQL_PASSWORD}
      - WORDPRESS_DB_NAME=${MYSQL_DB}
    volumes:
      - wordpress:/var/www/html
    networks:
      - app-network
  webserver:
    depends_on:
      - wordpress
    image: nginx:1.29
    container_name: webserver
    restart: unless-stopped
    ports:
      - "80:80"
    # Dodaj port nasłuchiwania żądań HTTPS dla Nginxa po wygenerowaniu certyfikatów produkcyjnych
    # - "443:443"
    volumes:
      - wordpress:/var/www/html
      # Podmień plik konfiguracyjny dla Nginxa
      # po wygenerowaniu wersji produkcyjnej certyfikatu
      # na ./nginx-ssl.conf:/etc/nginx/conf.d/nginx.conf
      - ./nginx.conf:/etc/nginx/conf.d/nginx.conf
      - certbot-etc:/etc/letsencrypt
    networks:
      - app-network
  certbot:
    depends_on:
      - webserver
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - wordpress:/var/www/html
    # Wpisz nazwę swojej domeny i adres email dla polecenia generowania certyfikatu.
    # Po wygenerowaniu certyfikatów testowych zmień opcję --staging na --force-renewal
    command: certonly --webroot --webroot-path=/var/www/html --email adres_email --agree-tos --no-eff-email --staging -d nazwa_domeny -d www.nazwa_domeny
volumes:
  certbot-etc:
  wordpress:
  dbdata:
networks:
  app-network:
    driver: bridge
